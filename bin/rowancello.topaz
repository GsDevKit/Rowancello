#!/usr/bin/env superdoit_topaz
#
# simply execute a topaz script: 
#		- using current $GEMSTONE and .topazini supplied on command line
#				simple.topaz -I ./.topazini -L
#		- using current $GS_HOME, stone name and topaz args supplied on command line
#				simple.topaz gs_361 -L

set u SystemUser p swordfish
login

run
"needed to run install project as DataCurator"
Published 
	at: #RwSpecification put: RwSpecification;
	at: #RwInvalidCategoryProtocolConventionErrorNotification put: RwInvalidCategoryProtocolConventionErrorNotification;
	at: #RwExecuteClassInitializeMethodsAfterLoadNotification put: RwExecuteClassInitializeMethodsAfterLoadNotification;
	yourself
%

commit

logout

set u seaside p swordfish
login

run
| symDict |
symDict := SymbolDictionary new.
symDict name: #Smalltalk.
GsCurrentSession currentSession symbolList
	addLast: symDict.
"Satisfy the compiler for now"
symDict
	at: #MCWorkingCopy put: nil;
	at: #MCCacheRepository put: nil;
	at: #MCHttpRepository put: nil;
	at: #MetacelloSemanticVersionNumber put: nil;

	at: #MetacelloRemoveMemberSpec put: nil;
	at: #MetacelloLookupProjectSpecForLoad put: nil;
	at: #MetacelloLookupProjectSpec put: nil;
	at: #MetacelloProjectSpecLoadConflict put: nil;
	at: #MetacelloValidationError put: nil;
	at: #MetacelloIgnorePackageLoaded put: nil;
	at: #MetacelloScriptEnsureProjectLoadedForDevelopment put: nil;
	at: #MetacelloProjectSpecLoadError put: nil;
	at: #MetacelloProjectSpecLoadedNotification put: nil;
	at: #MetacelloClearStackCacheNotification put: nil;
	at: #MetacelloLookupBaselineSpecForEnsureLoad put: nil;

	at: #MetacelloNameNotDefinedError put: nil;
	at: #MCRepositoryGroup put: nil;
	at: #MetacelloAllowProjectDowngrade put: nil;
	at: #MetacelloAllowProjectUpgrade put: nil;
	at: #MetacelloAllowConflictingProjectUpgrade put: nil;
	at: #MetacelloValidationFailure put: nil;
	at: #MetacelloAllowLockedProjectChange put: nil;
	at: #MetacelloProjectSpecForLoad put: nil;
	at: #MetacelloProjectRegistry put: nil;
	at: #MetacelloProjectRegistrationVersionInfo put: nil;

	at: #Gofer put: nil;
	at: #GoferResolvedReference put: nil;
	at: #MetacelloGoferPackage put: nil;
	at: #GoferVersionReference put: nil;
	at: #MetacelloSkipDirtyPackageLoad put: nil;
	at: #GoferPackageReference put: nil;
	at: #MetacelloGofer put: nil;
	at: #MetacelloGoferLoad put: nil;
	at: #MCVersionNameAndMessageRequest put: nil;
	at: #GoferRepositoryError put: nil;
	at: #MetacelloPackageSpecResolutionError put: nil;
	at: #MCDictionaryRepository put: nil;
	at: #MetacelloLoadData put: nil;

	at: #MetacelloCachingGoferResolvedReference put: nil;
	at: #MetacelloMCVersionSpecLoader put: nil;
	at: #MetacelloErrorInProjectConstructionNotification put: nil; 
	at: #MetacelloValidationNotification put: nil;

	at: #MetacelloVersionDiffReport put: nil;
	at: #MetacelloMCPartiallyLoadedStatus put: nil;
	at: #MetacelloLookupProjectSpecForLoad put: nil;

	yourself.

%

commit

